pipeline {
  agent any
  stages {
    stage('Build Jar') {
      steps {
        withEnv(overrides: ["JAVA_HOME=${ tool "java-8" }", "PATH+MAVEN=${ tool "maven" }/bin:${env.JAVA_HOME}/bin"]) {
          sh 'mvn clean package -Dmaven.test.skip=true'
        }
      }
    }

    stage('Build and Deploy DSV image') {
      steps {
        sh 'docker build -t cemasirt/jenkins-pipeline-example:dsv .'
        script {
          docker.withRegistry("", "registryCredential") {
            sh "docker push cemasirt/jenkins-pipeline-example:dsv"
          }
        }
      }
    }
    
    stage('Deploy app in DSV') {
      steps {
        sh "docker rm -f app-dsv &>/dev/null && sleep 1 && docker run --name=app-dsv -p 8081:8081 --net jenkins-pipeline-example_default -e SPRING_PROFILES_ACTIVE=dsv -d cemasirt/jenkins-pipeline-example:dsv"
      }
    }
    
  }
}